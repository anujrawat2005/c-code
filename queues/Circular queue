#include <iostream>
#include<queue>
using namespace std;






 class CQueue {
    public:
    int *arr;
    int size;
    int val;
    int front;
    int rear;
    
    CQueue(int size){
        arr = new int[size];
        this->size = size;
        front = -1;
        rear = -1;
    }
    void push(int val){
        if((front==0 && rear==size-1)||(rear==front-1)){
            cout<<"overflow"<<endl;
        }
        else if(front==-1 && rear==-1){
            front++;
            rear++;
            arr[rear] = val;
        }
        else if(rear==size-1&& front!=0){
            rear = 0;
            arr[rear] = val;
        }
        else{
            rear++;
            arr[rear] = val;
        }
    }
    void pop(){
        if(front==-1 && rear==-1){
            cout<<"underflow"<<endl;
            
        }
        else if(front==rear){
            arr[front] = -1;
            front = -1;
            rear = -1;
        }
        else if(front==size-1){
            arr[front] =-1;
            front = 0;
        }
        else {
            arr[front] = -1;
            front++;
        }
    }
    void print(){
        cout<<"printing queue"<<endl;
        for(int i =0;i<size;i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    
    
};

int main() {
    CQueue q(5);
    q.push(22);
    q.push(87);
    q.push(83);
    q.push(82);
    q.push(90);
    q.push(78);
    q.pop();
    q.push(12);
    q.push(78);
    
    q.print();
    

    return 0;
}
